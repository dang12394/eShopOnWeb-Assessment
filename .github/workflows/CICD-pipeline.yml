name: Build and deploy the app

on: [push, workflow_dispatch]


jobs:
  buildanddeploy:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    #Install .NET on runner
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        dotnet-quality: 'preview'

    #Basic .NET step
    - name: Build with dotnet
      run: |
        Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force
        dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release
    #Publish app.zip package
    - name: dotnet publish
      run: |
        $publishPath = "C:\tools\myapp"
        New-Item -ItemType Directory -Force -Path $publishPath | Out-Null
        dotnet publish ./src/Web/Web.csproj -c Release -o "$publishPath"
        cd "$publishPath"
        Compress-Archive -Path * -DestinationPath C:\tools\app.zip -Force
    #Upload app.zip to staging and wait to deploy
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: .net-app
        path: C:\tools\app.zip

    - name: Deploy zip file to IIS
      run: |
        powershell -ExecutionPolicy Bypass -File ./deployment-script.ps1
    
    - name: Install monitoring service
      run: |
        powershell -ExecutionPolicy Bypass -File ./monitoring-script.ps1
  
  dockerbuildanddeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
        
      - name: Debug secrets presence
        run: |
          echo "PASSWORD=${{ secrets.DOCKER_PASSWORD != '' }}"

      - name: Docker hub login
        uses: docker/login-action@v3
        with:
          username: dang12394
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build
        run: docker build -t dang12394/eshoponweb:latest -f src/Web/Dockerfile .
      
      - name: Docker push
        run: docker push dang12394/eshoponweb:latest
      
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CRED }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2
        
      - name: Terraform Init
        run: terraform init
        working-directory: ./TFcode
      
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./TFcode
